[default]
project = please_change_it
# stage: [staging, product, local]
stage = please_change_it

;[ssh]
login_user= please_change_it
target_ips= please_change_it

;[server]
# additional packages to be installed on the server
additional_packages = ['git',]

;[django]
#  system user, owner of the processes and code on your server
#  the user and it's home dir will be created if not present
django_user = django
# user group
django_user_group = %(django_user)s
#  the code of your project will be located here
django_user_home = /opt/%(django_user)s
#  projects path
projects_path = %(django_user_home)s/projects
#  the root path of your project
code_root=%(projects_path)s/%(project)s
#  the path where manage.py of this project is located
django_project_root = %(code_root)s
#  the Python path to a Django settings module.
django_project_settings = settings
#  django media dir
django_media_path = /www/cutrect/media
#  django static dir
django_static_path = /www/cutrect/static
#  django media url and root dir
django_media_url = /media/
django_media_root = /www/cutrect
#  django static url and root dir
django_static_url = /static/
# %(django_static_root = %(code_root
django_static_root = /www/cutrect
#  do you use south in your django project?
south_used = True
#  virtualenv root
virtenv = %(django_user_home)s/envs/%(project)s
#  some virtualenv options, must have at least one
virtenv_options = ['distribute', 'no-site-packages' ]
#  location of your pip requirements file
#  http://www.pip-installer.org/en/latest/requirements.html#the-requirements-file-format
#  set it to None to not use
requirements_file = %(code_root)s/requirements.txt
#  always ask user for confirmation when run any tasks
ask_confirmation = False

;[repository]
#  name of your project - no spaces, no special chars
;project = cutrect
#  git repository of your project
repository =
default_branch = master

;[gunicorn]
#   START gunicorn settings ###
#  be sure to not have anything running on that port
gunicorn_bind = 127.0.0.1:8100
gunicorn_logfile = %(django_user_home)s/logs/projects/%(project)s_gunicorn.log
rungunicorn_script = %(django_user_home)s/scripts/rungunicorn_%(project)s.sh
gunicorn_workers = 2
gunicorn_worker_class = eventlet
gunicorn_loglevel = info
#   END gunicorn settings ###

;[nginx]
#   START nginx settings ###
# Only domain name, without 'www' or 'http://'
nginx_server_name =
nginx_conf_file = %(django_user_home)s/configs/nginx/%(project)s.conf
nginx_webpage_conf_file = %(django_user_home)s/configs/nginx/nginx_webpage.conf
nginx_client_max_body_size = 10
# Maximum accepted body size of client request, in MB
nginx_htdocs = %(django_user_home)s/htdocs
# will configure nginx with ssl on, your certificate must be installed
# more info here: http://wiki.nginx.org/HttpSslModule
nginx_https = False
#   END nginx settings ###

;[pip]
### START china pip settings ###
pip_conf_file = %(django_user_home)s/configs/pip/pip.conf
### END china pip settings ###

;[supervisor]
#   START supervisor settings ###
# http://supervisord.org/configuration.html#program-x-section-settings
# default: %(project
supervisor_program_name = %(project)s
supervisor_worker_program_name = %(project)s_celery_worker
supervisor_beat_program_name = %(project)s_celery_beat
supervisorctl = /usr/bin/supervisorctl
# supervisorctl script
supervisor_autostart = true
# true or false
supervisor_autorestart = true
# true or false
supervisor_redirect_stderr = true
# true or false
supervisor_stdout_logfile = %(django_user_home)s/logs/projects/supervisord_%(project)s.log
supervisord_appconf_file = %(django_user_home)s/configs/supervisord/%(project)s.conf
supervisord_workerconf_file = %(django_user_home)s/configs/supervisord/%(project)s_worker.conf
supervisord_beatconf_file = %(django_user_home)s/configs/supervisord/%(project)s_beat.conf
worker_logfile = %(django_user_home)s/logs/%(project)s/%(project)s_celery_work.log
beat_logfile = %(django_user_home)s/logs/%(project)s/%(project)s_celery_beat.log
#  END supervisor settings ###
supervisor_celery_worker_name = prod-celery

;[aws]
#   START AWS CONFIG ###
aws_access_key = please_change_it
aws_secret_key = please_change_it
email_pw = please_change_it
#   END AWS CONFIG ###